#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


rtmp {
        server {
                listen 1935;
                chunk_size 8192;
				notify_method get;
				
				
                                
                 application live {
                
                       	live on;
                       	allow publish all;
					allow play all;
                	push rtmp://172.16.201.41/live;
		}

               
			
        }
}


http {

    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;


	 access_log 		logs/rtmp_access.log;


    server {
        listen       80;
        server_name  localhost;



	# rtmp statistics
        location /stat {
        rtmp_stat all;
        rtmp_stat_stylesheet stat.xsl;
        }
		
        location /stat.xsl {
            # you can move stat.xsl to a different location
            # under linux you could use /var/user/www for example
            root html;			
        }



	error_page 401 /custom_401.html;
	location = /custom_401.html {
		root /usr/local/nginx/html/;
		internal;
	} 


        error_page 403 /custom_403.html;
        location = /custom_403.html {
                root /usr/local/nginx/html/;
                internal;
        }


        error_page 404 /custom_404.html;
        location = /custom_404.html {
                root /usr/local/nginx/html/;
                internal;
        }


        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        
    

		#~ error_page 404 /404.html;
		#~ location = /usr/local/nginx/html/404.html {
		#~ root /usr/local/nginx/html/404.html;
		#~ }
		#
		
		
		
		
		
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #~ location ~ \.php$ {
            #~ proxy_pass   http://127.0.0.1;
        #~ }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
       
       
       
       
       
        #~ location ~ \.php$ {
            #~ proxy_pass   http://127.0.0.1;
        #~ }
         #~ pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        
      
      
      

	
	
	
	
	
       #~ location ~ \.php$ {
           #~ root           html;
           #~ fastcgi_pass   127.0.0.1:9000;
           #~ fastcgi_index  index.php;
           #~ fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
           #~ include        fastcgi_params;
        #~ }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\. {
            deny  all;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
